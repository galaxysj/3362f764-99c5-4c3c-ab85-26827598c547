import tkinter as tk
import subprocess
from tkinter import ttk
from tkinter.messagebox import showerror, showwarning, showinfo
from tkinter import filedialog as fd
import os
import threading
from tkinter import simpledialog
import time


def update_label(text):
    label.config(text=text)
    label.update_idletasks()  # 글자 바뀐 후 실제 너비 반영
    w = label.winfo_width()
    root_w = root.winfo_width()
    label.place(x=(root_w - w)//2, y=45)

# ===================== start 관련 =====================
def start_thread():
    def task():
        apps_to_delete = [
            "com.android.vending",
            "com.sec.android.app.samsungapps",
            "com.kt.olleh.storefront",
            "com.skt.skaf.A000Z00040",
            "com.lguplus.appstore",
            "com.google.android.youtube",
            "com.android.chrome",
            "com.google.android.gm",
            "com.google.android.apps.maps",
            "com.google.android.googlequicksearchbox",
            "com.google.android.apps.tachyon",
            "com.sec.android.app.sbrowser",
            "com.sec.android.app.shealth",
            "com.sec.android.app.fm",
            "com.samsung.android.arzone",
            "com.samsung.android.themestore",
            "com.samsung.android.app.watchmanager",
            "com.samsung.android.voc",
            "com.samsung.android.oneconnect",
            "com.samsung.android.bixby.agent",
            "com.samsung.sec.android.prd",
            "com.sec.penup",
            "com.google.android.apps.photos",
            "com.google.android.videos",
            "com.google.android.apps.docs",
            "com.google.android.apps.youtube.music",
            "com.samsung.android.app.spage",
            "com.samsung.sree",
            "com.microsoft.skydrive",
            "com.microsoft.office.outlook",
            "com.microsoft.office.officehubrow"
        ]

        total_steps = 4 + len(apps_to_delete)  # 다운로드 2 + 압축해제 1 + ADB 시작 1 + 앱 삭제 갯수

        current_step = 0

        def update_progress():
            nonlocal current_step
            current_step += 1
            percent = (current_step / total_steps) * 100
            root.after(0, lambda: progress.config(value=percent))

        root.after(0, lambda: progress.config(mode="determinate", maximum=100, value=0))
        root.after(0, lambda: update_label('파일 다운로드 중...'))

        try:
            subprocess.run('powershell -Command "Invoke-WebRequest -Uri https://dl.google.com/android/repository/platform-tools-latest-windows.zip -OutFile platform-tools-latest-windows.zip"', shell=True)
            update_progress()

            subprocess.run('powershell -Command "Invoke-WebRequest -Uri http://stahlworks.com/dev/unzip.exe -OutFile unzip.exe"', shell=True)
            update_progress()

            subprocess.run('echo A | unzip.exe platform-tools-latest-windows.zip', shell=True)
            update_progress()

            
            
            subprocess.run(f"cd platform-tools & adb start-server", shell=True)
            update_progress()

            root.after(0, lambda: update_label("앱 삭제 중..."))

            for package in apps_to_delete:
                subprocess.run(f'cd platform-tools & adb shell pm uninstall -k --user 0 {package}', shell=True)
                update_progress()
                root.update_idletasks()
                time.sleep(0.1)

        except Exception as e:
            root.after(0, lambda: showerror("오류", f"{e}"))
        finally:
            root.after(0, lambda: progress.config(value=100))
            root.after(0, lambda: showinfo("안내", "삭제가 완료되었습니다."))
            root.after(0, lambda: update_label("준비"))

    threading.Thread(target=task, daemon=True).start()









# ===================== 무선start 관련 =====================
    
def wifistart():
    addr = simpledialog.askstring(title="주소", prompt="IP와 포트를 입력하세요.")
    paddr = simpledialog.askstring(title="주소", prompt="페어링 IP와 포트를 입력하세요.")
    code = simpledialog.askstring(title="코드", prompt="페어링 코드를 입력하세요.")
    if not addr or not code:
        showerror("오류", "IP 또는 페어링 코드가 입력되지 않았습니다.")
        return
    def task(paddr, addr, code):
        apps_to_delete = [
            "com.android.vending",
            "com.sec.android.app.samsungapps",
            "com.kt.olleh.storefront",
            "com.skt.skaf.A000Z00040",
            "com.lguplus.appstore",
            "com.google.android.youtube",
            "com.android.chrome",
            "com.google.android.gm",
            "com.google.android.apps.maps",
            "com.google.android.googlequicksearchbox",
            "com.google.android.apps.tachyon",
            "com.sec.android.app.sbrowser",
            "com.sec.android.app.shealth",
            "com.sec.android.app.fm",
            "com.samsung.android.arzone",
            "com.samsung.android.themestore",
            "com.samsung.android.app.watchmanager",
            "com.samsung.android.voc",
            "com.samsung.android.oneconnect",
            "com.samsung.android.bixby.agent",
            "com.samsung.sec.android.prd",
            "com.sec.penup",
            "com.google.android.apps.photos",
            "com.google.android.videos",
            "com.google.android.apps.docs",
            "com.google.android.apps.youtube.music",
            "com.samsung.android.app.spage",
            "com.samsung.sree",
            "com.microsoft.skydrive",
            "com.microsoft.office.outlook",
            "com.microsoft.office.officehubrow"
        ]

        total_steps = 5 + len(apps_to_delete)  # 다운로드 2 + 압축해제 1 + ADB 시작 1 + 앱 삭제 갯수

        current_step = 0

        def update_progress():
            nonlocal current_step
            current_step += 1
            percent = (current_step / total_steps) * 100
            root.after(0, lambda: progress.config(value=percent))

        root.after(0, lambda: progress.config(mode="determinate", maximum=100, value=0))
        root.after(0, lambda: update_label('파일 다운로드 중...'))

        try:
            subprocess.run('powershell -Command "Invoke-WebRequest -Uri https://dl.google.com/android/repository/platform-tools-latest-windows.zip -OutFile platform-tools-latest-windows.zip"', shell=True)
            update_progress()

            subprocess.run('powershell -Command "Invoke-WebRequest -Uri http://stahlworks.com/dev/unzip.exe -OutFile unzip.exe"', shell=True)
            update_progress()

            subprocess.run('echo A | unzip.exe platform-tools-latest-windows.zip', shell=True)
            update_progress()
            
            subprocess.run(f"cd platform-tools & adb start-server", shell=True)
            update_progress()


            root.after(0, lambda: update_label("앱 삭제 중..."))
            subprocess.run(
                f'cd platform-tools & adb pair {paddr}',
                input=code + "\n",
                text=True,
                shell=True
            )
            subprocess.run(f'cd platform-tools & adb connect {addr}', shell=True)
            update_progress()
            for package in apps_to_delete:
                subprocess.run(f'cd platform-tools & adb shell pm uninstall -k --user 0 {package}', shell=True)
                update_progress()
                root.update_idletasks()
                time.sleep(0.1)
                
            subprocess.run(f'cd platform-tools & adb disconnect', shell=True)

        except Exception as e:
            root.after(0, lambda: showerror("오류", f"{e}"))
        finally:
            root.after(0, lambda: progress.config(value=100))
            root.after(0, lambda: showinfo("안내", "삭제가 완료되었습니다."))
            root.after(0, lambda: update_label("준비"))

    threading.Thread(target=task, args=(paddr, addr, code), daemon=True).start()
# ===================== recover 관련 =====================
def recover_thread():
    def task():
        apps_to_recover = [
            "com.android.vending",
            "com.sec.android.app.samsungapps",
            "com.kt.olleh.storefront",
            "com.skt.skaf.A000Z00040",
            "com.lguplus.appstore",
            "com.google.android.youtube",
            "com.android.chrome",
            "com.google.android.gm",
            "com.google.android.apps.maps",
            "com.google.android.googlequicksearchbox",
            "com.google.android.apps.tachyon",
            "com.sec.android.app.sbrowser",
            "com.sec.android.app.shealth",
            "com.sec.android.app.fm",
            "com.samsung.android.arzone",
            "com.samsung.android.themestore",
            "com.samsung.android.app.watchmanager",
            "com.samsung.android.voc",
            "com.samsung.android.spay",
            "com.samsung.android.oneconnect",
            "com.samsung.android.bixby.agent",
            "com.samsung.sec.android.prd",
            "com.sec.penup",
            "com.google.android.apps.photos",
            "com.google.android.videos",
            "com.google.android.apps.docs",
            "com.google.android.apps.youtube.music",
            "com.samsung.android.app.spage",
            "com.samsung.sree",
            "com.microsoft.skydrive",
            "com.microsoft.office.outlook",
            "com.microsoft.office.officehubrow"
        ]

        total_steps = 4 + len(apps_to_recover)  # 다운로드 2 + 압축해제 1 + ADB 시작 1 + 복구 갯수

        current_step = 0

        def update_progress():
            nonlocal current_step
            current_step += 1
            percent = (current_step / total_steps) * 100
            root.after(0, lambda: progress.config(value=percent))

        root.after(0, lambda: progress.config(mode="determinate", maximum=100, value=0))
        root.after(0, lambda: update_label('파일 다운로드 중...'))

        try:
            subprocess.run('powershell -Command "Invoke-WebRequest -Uri https://dl.google.com/android/repository/platform-tools-latest-windows.zip -OutFile platform-tools-latest-windows.zip"', shell=True)
            update_progress()

            subprocess.run('powershell -Command "Invoke-WebRequest -Uri http://stahlworks.com/dev/unzip.exe -OutFile unzip.exe"', shell=True)
            update_progress()

            subprocess.run('echo A | unzip.exe platform-tools-latest-windows.zip', shell=True)
            update_progress()
            
            subprocess.run(f"cd platform-tools & adb start-server", shell=True)
            update_progress()


            root.after(0, lambda: update_label("복구 중..."))
            
            for package in apps_to_recover:
                subprocess.run(f'cd platform-tools & adb shell pm install-existing --user 0 {package}', shell=True)
                update_progress()
                root.update_idletasks()
                time.sleep(0.1)
            subprocess.run(f'cd platform-tools & adb disconnect', shell=True)

        except Exception as e:
            root.after(0, lambda: showerror("오류", f"{e}"))
        finally:
            root.after(0, lambda: progress.config(value=100))
            root.after(0, lambda: showinfo("안내", "복구가 완료되었습니다."))
            root.after(0, lambda: update_label("준비"))

    threading.Thread(target=task, daemon=True).start()
#와이파이 복구
def wifirec():
    addr = simpledialog.askstring(title="주소", prompt="IP와 포트를 입력하세요.")
    paddr = simpledialog.askstring(title="주소", prompt="페어링 IP와 포트를 입력하세요.")
    code = simpledialog.askstring(title="코드", prompt="페어링 코드를 입력하세요.")
    if not addr or not code:
        showerror("오류", "IP 또는 페어링 코드가 입력되지 않았습니다.")
        return
    def task(paddr, addr, code):
        apps_to_recover = [
            "com.android.vending",
            "com.sec.android.app.samsungapps",
            "com.kt.olleh.storefront",
            "com.skt.skaf.A000Z00040",
            "com.lguplus.appstore",
            "com.google.android.youtube",
            "com.android.chrome",
            "com.google.android.gm",
            "com.google.android.apps.maps",
            "com.google.android.googlequicksearchbox",
            "com.google.android.apps.tachyon",
            "com.sec.android.app.sbrowser",
            "com.sec.android.app.shealth",
            "com.sec.android.app.fm",
            "com.samsung.android.arzone",
            "com.samsung.android.themestore",
            "com.samsung.android.app.watchmanager",
            "com.samsung.android.voc",
            "com.samsung.android.spay",
            "com.samsung.android.oneconnect",
            "com.samsung.android.bixby.agent",
            "com.samsung.sec.android.prd",
            "com.sec.penup",
            "com.google.android.apps.photos",
            "com.google.android.videos",
            "com.google.android.apps.docs",
            "com.google.android.apps.youtube.music",
            "com.samsung.android.app.spage",
            "com.samsung.sree",
            "com.microsoft.skydrive",
            "com.microsoft.office.outlook",
            "com.microsoft.office.officehubrow"
        ]
        
        
        total_steps = 5 + len(apps_to_recover)  # 다운로드 2 + 압축해제 1 + ADB 시작 1 + 복구 갯수

        current_step = 0

        def update_progress():
            nonlocal current_step
            current_step += 1
            percent = (current_step / total_steps) * 100
            root.after(0, lambda: progress.config(value=percent))

        root.after(0, lambda: progress.config(mode="determinate", maximum=100, value=0))
        root.after(0, lambda: update_label('파일 다운로드 중...'))

        try:
            subprocess.run('powershell -Command "Invoke-WebRequest -Uri https://dl.google.com/android/repository/platform-tools-latest-windows.zip -OutFile platform-tools-latest-windows.zip"', shell=True)
            update_progress()

            subprocess.run('powershell -Command "Invoke-WebRequest -Uri http://stahlworks.com/dev/unzip.exe -OutFile unzip.exe"', shell=True)
            update_progress()

            subprocess.run('echo A | unzip.exe platform-tools-latest-windows.zip', shell=True)
            update_progress()
            
            subprocess.run(f"cd platform-tools & adb start-server", shell=True)
            update_progress()

            


            root.after(0, lambda: update_label("복구 중..."))
            subprocess.run(
                f'cd platform-tools & adb pair {paddr}',
                input=code + "\n",
                text=True,
                shell=True
            )
            subprocess.run(f'cd platform-tools & adb connect {addr}', shell=True)
            update_progress()
            for package in apps_to_recover:
                subprocess.run(f'cd platform-tools & adb shell pm install-existing --user 0 {package}', shell=True)
                update_progress()
                root.update_idletasks()
                time.sleep(0.1)
            subprocess.run(f'cd platform-tools & adb disconnect', shell=True)

        except Exception as e:
            root.after(0, lambda: showerror("오류", f"{e}"))
        finally:
            root.after(0, lambda: progress.config(value=100))
            root.after(0, lambda: showinfo("안내", "복구가 완료되었습니다."))
            root.after(0, lambda: update_label("준비"))

    threading.Thread(target=task, args=(paddr, addr, code), daemon=True).start()
# ===================== install 관련 =====================

def install_app_thread():
    filename = fd.askopenfilename()
    if not filename:
        return

    def task():
        total_steps = 6
        current_step = 0
        def update_progress():
            nonlocal current_step
            current_step += 1
            percent = (current_step / total_steps) * 100
            root.after(0, lambda: progress.config(value=percent))

        root.after(0, lambda: progress.config(mode="determinate", maximum=100, value=0))
        root.after(0, lambda: update_label('파일 준비 중...'))

        try:
            fixed_path = filename.replace("/", "\\")
            filename_only = os.path.basename(fixed_path)
            temp_file = fixed_path + ".apk"

            # 파일명 변경 (원본 덮어쓰지 않도록 주의)
            os.rename(fixed_path, temp_file)
            update_progress()

            subprocess.run('powershell -Command "Invoke-WebRequest -Uri https://dl.google.com/android/repository/platform-tools-latest-windows.zip -OutFile platform-tools-latest-windows.zip"', shell=True)
            update_progress()

            root.after(0, lambda: update_label('압축해제 중...'))
            subprocess.run('powershell -Command "Invoke-WebRequest -Uri http://stahlworks.com/dev/unzip.exe -OutFile unzip.exe"', shell=True)
            update_progress()

            subprocess.run('echo A | unzip.exe platform-tools-latest-windows.zip', shell=True)
            update_progress()
            

            
            subprocess.run(f"cd platform-tools & adb start-server", shell=True)
            update_progress()

            root.after(0, lambda: update_label('설치 중...'))
            subprocess.run(r'cd platform-tools & adb install "' + temp_file + '"', shell=True)
            update_progress()

            # 원래 이름으로 복원
            os.rename(temp_file, fixed_path)

        except Exception as e:
            root.after(0, lambda: showerror("오류", f"설치 중 오류 발생:\n{e}"))

        finally:
            root.after(0, lambda: progress.config(value=100))
            root.after(0, lambda: showinfo("안내", '설치가 완료되었습니다.'))
            root.after(0, lambda: update_label('준비'))

    threading.Thread(target=task, daemon=True).start()
def wifiitl():
    addr = simpledialog.askstring(title="주소", prompt="IP와 포트를 입력하세요.")
    paddr = simpledialog.askstring(title="주소", prompt="페어링 IP와 포트를 입력하세요.")
    code = simpledialog.askstring(title="코드", prompt="페어링 코드를 입력하세요.")
    if not addr or not code:
        showerror("오류", "IP 또는 페어링 코드가 입력되지 않았습니다.")
        return
    filename = fd.askopenfilename()
    if not filename:
        return

    def task(paddr, addr, code):
        total_steps = 6
        current_step = 0
        def update_progress():
            nonlocal current_step
            current_step += 1
            percent = (current_step / total_steps) * 100
            root.after(0, lambda: progress.config(value=percent))

        root.after(0, lambda: progress.config(mode="determinate", maximum=100, value=0))
        root.after(0, lambda: update_label('파일 준비 중...'))

        try:
            fixed_path = filename.replace("/", "\\")
            filename_only = os.path.basename(fixed_path)
            temp_file = fixed_path + ".apk"

            # 파일명 변경 (원본 덮어쓰지 않도록 주의)
            os.rename(fixed_path, temp_file)
            update_progress()

            subprocess.run('powershell -Command "Invoke-WebRequest -Uri https://dl.google.com/android/repository/platform-tools-latest-windows.zip -OutFile platform-tools-latest-windows.zip"', shell=True)
            update_progress()

            root.after(0, lambda: update_label('압축해제 중...'))
            subprocess.run('powershell -Command "Invoke-WebRequest -Uri http://stahlworks.com/dev/unzip.exe -OutFile unzip.exe"', shell=True)
            update_progress()

            subprocess.run('echo A | unzip.exe platform-tools-latest-windows.zip', shell=True)
            update_progress()
            program_path = r"platform-tools\adb.exe"

            
            subprocess.run(f"cd platform-tools & adb start-server", shell=True)
            update_progress()



            root.after(0, lambda: update_label('설치 중...'))
            subprocess.run(
                f'cd platform-tools & adb pair {paddr}',
                input=code + "\n",
                text=True,
                shell=True
            )
            subprocess.run(f'cd platform-tools & adb connect {addr}', shell=True)
            update_progress()
            
            subprocess.run(r'cd platform-tools & adb install "' + temp_file + '"', shell=True)
            update_progress()
            subprocess.run(f'cd platform-tools & adb disconnect', shell=True)

            # 원래 이름으로 복원
            os.rename(temp_file, fixed_path)

        except Exception as e:
            root.after(0, lambda: showerror("오류", f"설치 중 오류 발생:\n{e}"))

        finally:
            root.after(0, lambda: progress.config(value=100))
            root.after(0, lambda: showinfo("안내", '설치가 완료되었습니다.'))
            root.after(0, lambda: update_label('준비'))

    threading.Thread(target=task, args=(paddr, addr, code), daemon=True).start()
# ===================== 무선연결 관련  =====================
def changewifi():
    cng_btn.config(text="유선", command=changeusb)
    start_btn.config(text="무선 시작", command=wifistart)
    recover_btn.config(text="무선 복구", command=wifirec)
    study_btn.config(text="무선 설치", command=wifiitl)
def changeusb():
    cng_btn.config(text="무선", command=changewifi)
    start_btn.config(text="유선 시작", command=start_thread)
    recover_btn.config(text="유선 복구", command=recover_thread)
    study_btn.config(text="유선 설치", command=install_app_thread)
# ===================== 메인 윈도우 생성 =====================
root = tk.Tk()
root.title("학습폰 4.0")
root.geometry("400x150")
root.configure(bg="white")

progress = ttk.Progressbar(root, orient="horizontal", length=300, mode="determinate", maximum=100, value=0)
progress.place(x=50, y=70)
label = tk.Label(root, text="준비", bg="white")
label.place(x=180, y=45)

study_btn = tk.Button(root, text="유선 설치", command=install_app_thread, width=10, height=1, font=("Segoe UI", 9), bg="white")
study_btn.place(x=15, y=110)

recover_btn = tk.Button(root, text="유선 복구", command=recover_thread, width=10, height=1, font=("Segoe UI", 9), bg="white")
recover_btn.place(x=305, y=110)

start_btn = tk.Button(root, text="유선 시작", command=start_thread, width=10, height=1, font=("Segoe UI", 9), bg="white")
start_btn.place(x=215, y=110)

cng_btn = tk.Button(root, text="무선", command=changewifi, width=5, height=1, font=("Segoe UI", 9), bg="white")
cng_btn.place(x=10, y=10)

root.mainloop()


